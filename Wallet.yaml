openapi: 3.0.3
info:
  title: Wallet Management API
  version: 1.0.0
  description: Manages wallets and financial transactions.

servers:
  - url: https://wallet.com
paths:
  /accounts:
    get:
      tags:
        - "Accounts"
      summary: Get the list of all accounts
      operationId: getAccounts
      responses:
        200:
          $ref: "#/components/responses/Success200"
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"

  /accounts/{id}:
    get:
      tags:
        - "Accounts"
      summary: Get an account by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the account
      responses:
        200:
          $ref: "#/components/responses/Success200"
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"
    put:
      tags:
        - "Accounts"
      summary: Update details of an existing account
      operationId: updateAccount
      parameters:
        - in: path
          name: id
          description: ID of the account to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountInput"
      responses:
        204:
          description: Success
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"
  /currencies:
    get:
      tags:
        - "Currencies"
      summary: Retrieve all currencies
      responses:
        200:
          $ref: "#/components/responses/Success200"
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"

  /currencies/{id}:
    get:
      tags:
        - "Currencies"
      summary: Retrieve a currency by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the currency
      responses:
        200:
          $ref: "#/components/responses/Success200"
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"
    put:
      tags:
        - "Currencies"
      summary: Update a currency
      requestBody:
        description: Data to update a currency
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CurrencyInput"
      responses:
        204:
          description: Success
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"
  /transactions:
    get:
      tags:
        - "Transactions"
      summary: Obtain all transactions
      responses:
        200:
          $ref: "#/components/responses/Success200"
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"

  /transactions/{id}:
    get:
      tags:
        - "Transactions"
      summary: Obtain a transaction by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the transaction
      responses:
        200:
          $ref: "#/components/responses/Success200"
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"
    put:
      tags:
        - "Transactions"
      summary: Update a transaction by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the transaction
      requestBody:
        description: Updated transaction data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionInput"
      responses:
        204:
          description: Success
        404:
          $ref: "#/components/responses/NotFound404"
        500:
          $ref: "#/components/responses/Error500"

components:
  responses:
    Success200:
      description: Successful response
      content:
        application/json:
          example:
            id: 1
            name: Euro
            code: EUR
    Success204:
      description: Successful update, no content

    NotFound404:
      description: Resource not found
      content:
        application/json:
          example:
            error: Currency not found

    Success200Transaction:
      description: Successful response
      content:
        application/json:
          example:
            id: 1
            label: "Transaction 1"
            amount: 80.0
            type: "crédit"
            date: "2023-12-31T23:59:59Z"
            account:
              id: 1
              name: "Account 1"
              currency:
                id: 1
                name: Euro
                code: EUR
              code: "ACC1"
              balance:
                value: 1800.0
                datetime: "2023-12-31T23:59:59Z"
              type: "banque"
              transactions: []

    Created201:
      description: Resource created successfully
      content:
        application/json:
          example:
            id: 2
            label: "Transaction 2"
            amount: -100.0
            type: "débit"
            date: "2023-12-31T12:30:45Z"
            account:
              id: 2
              name: "Account 2"
              currency:
                id: 2
                name: Dollar
                code: USD
              code: "ACC2"
              balance:
                value: 420.0
                datetime: "2023-12-31T12:30:45Z"
              type: "espèce"
              transactions: []

    Success204Transaction:
      description: Successful update, no content

    NotFound404Transaction:
      description: Resource not found
      content:
        application/json:
          example:
            error: Transaction not found

    Error500:
      description: Internal server error
      content:
        application/json:
          example:
            error: Internal server error
  schemas:
    CurrencyInput:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
    AccountInput:
      type: object
      properties:
        name:
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        code:
          type: string
        balance:
          type: object
          properties:
            value:
              type: number
            datetime:
              type: string
              format: date-time
          required:
            - value
            - datetime
        type:
          type: string
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"

    Currency:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string

    TransactionInput:
      type: object
      properties:
        label:
          type: string
        amount:
          type: number
        type:
          type: string
        date:
          type: string
          format: date-time
        account:
          $ref: "#/components/schemas/AccountInput"

    Transaction:
      type: object
      properties:
        id:
          type: integer
        label:
          type: string
        amount:
          type: number
        type:
          type: string
        date:
          type: string
          format: date-time
        account:
          $ref: "#/components/schemas/AccountInput"
